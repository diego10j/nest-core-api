import { Query } from './query';
import { SelectQuery } from './select-query';
import { DataSourceService } from '../datasource.service';
import { Column } from '../interfaces/column';
export declare class DataStore {
    private readonly dataSource;
    tableName: string;
    primaryKey: string;
    whereTable: string;
    selectColumnsTable: string;
    orderColumn: string;
    query: SelectQuery;
    data: any[];
    columns: Column[];
    isDataStoreQuery: boolean;
    listQuery: Query[];
    isAutoIncrementPK: boolean;
    index: number;
    constructor(dataSource: DataSourceService);
    setDataStoreTable(tableName: string, primaryKey: string): void;
    setWhereTable(whereTable: string): void;
    setSelectColumnsTable(selectColumnsTable: string): void;
    setDataStoreQuery(stringQuery: string, primaryKey: string): void;
    setAutoIncrementPrimaryKey(isAutoIncrementPK: boolean): void;
    addParam(index: number, value: any): void;
    execute(): Promise<void>;
    getSize(): number;
    isEmpty(): boolean;
    getValue(index: number, column: string): any;
    setValue(index: number, column: string, value: any): void;
    delete(index: number): void;
    insert(): void;
    save(): Promise<void>;
    getIndexColumn(column: string): number;
    getIndexRow(valor: any): number;
}
